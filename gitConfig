Git Configuration 


1 ) -firstly create a folder and then git init.
2 )-auto create a .git folder inside previous created folder.
3 )-and then check git status.
4 )- git config --global user.name "username"
5 )-git config --global user.email email-id.
6 )-created a file using touch command and check git status.
7 )-git add --a go into in staging area.
8 )-git commit -m "".
9 )-some changes in files then git add --a.
10 )-git commit -m "".
11 )-check the git log whole info .
12 )-git config --list.
13 )-git add . Directly go into committed area .
14 )-git add -a -m "". Directly into committed area.
15 )-Unstaging the file git restore --staged file.txt.
16 )-git checkout -f.
17 )-git mv file4.txt file3.txt. (rename).
18 )-git rm file2.txt (deleted).
19 )-check git status and then merging the remote our directory we create repository on GitHub then
We add - git remote add origin https://github.com/user_id/git_Config.git .
20 )-git push origin master .and check the GitHub what will be update or not.but not directly push in master create a branch then copy the code and update then will add in master branch.
21 )-but some time access your authentication no other person directly push or updated or code then add ssh key which not any other update or push directly in your repository.
22. )- then we add ssh key on GitHub account.
23 )-steps -add ssh key a )-google  (ssh key GitHub) first link open then click on it .
   b)-ssh-keygen -t ed25519 -C "your_email@example.com" paste your email-id on terminal.
   c)-eval "$(ssh-agent -s)"  paste on terminal.
   d)-ssh-add --apple-use-keychain ~/.ssh/id_ed25519.   //run the command without the --apple-use-keychain option.
   e)-click on Adding a new SSH key to your GitHub account.
   f)-$ pbcopy < ~/.ssh/id_ed25519.pub
# Copies the contents of the id_ed25519.pub file to your clipboard
   g)-add the ssh key on GitHub.
24 )-to create a new branch git checkout -b devA.
25. )-created some files or update the code then git add --a and commit.
26 )-when we switches the branches then git checkout master/devA.
27 )-to check branches we will use git branch.
28 )-when we create on remote then git push origin devA.
29 )-then merge all the branches inside master branch.
30 )-git merge devA.
31 )-when we use pull the code on our branch devA then git pull origin master.







